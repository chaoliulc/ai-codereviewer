name: 直接调用 AI 审查 API
on:
  pull_request:
    types: [opened, reopened, synchronize, ready_for_review]
  workflow_dispatch:
    inputs:
      pr_number:
        description: 'PR 编号（如 123）'
        required: true
        type: number
      source_branch:
        description: '源分支'
        required: true
      target_branch:
        description: '目标分支'
        required: true

jobs:
  call-ai-review-api:
    runs-on: ubuntu-latest
    services:
      mongodb:
        image: mongo:7.0  # MongoDB 官方镜像，可指定版本
        ports:
          - 27017:27017
        options: --health-cmd "mongo --eval 'db.adminCommand('ping')'" --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - name: 1. 调用 AI 审查 API
        env:
          # 环境变量配置（同上，略）
          LLM_PROVIDER: ${{ secrets.LLM_PROVIDER }}
          # ... 其他变量保持不变
          PR_NUMBER: ${{ github.event.pull_request.number || github.event.inputs.pr_number || null }}
          PR_STATE: ${{ github.event.pull_request.state || github.event.inputs.pr_state || null }}
          SOURCE_BRANCH: ${{ github.event.pull_request.head.ref || github.event.inputs.source_branch || github.ref_name || null }}
          TARGET_BRANCH: ${{ github.event.pull_request.base.ref || github.event.inputs.target_branch || github.event.repository.default_branch || null }}
          # ... 其余变量
        run: |
          # 1. Shell 变量兜底为 null（无引号，核心！）
          REPO=${REPO:-null}
          PROJECT_NAME=${PROJECT_NAME:-null}
          PR_NUMBER=${PR_NUMBER:-null}
          PR_STATE=${PR_STATE:-null}
          SOURCE_BRANCH=${SOURCE_BRANCH:-null}
          TARGET_BRANCH=${TARGET_BRANCH:-null}

          # 2. jq 组装请求体（区分类型处理 null）
          REQUEST_BODY=$(jq -n \
            --arg repo "$REPO" \
            --argjson mrNumber "$PR_NUMBER" \  # 数字/空值：直接用 --argjson 接收 null
            --arg commitSha "$COMMIT_SHA" \
            --arg eventType "$EVENT_TYPE" \
            --arg token "$GITHUB_TOKEN" \
            --arg mrState "$PR_STATE" \        # 字符串：后续用 jq 转换 null
            --arg projectId "$PROJECT_ID" \
            --arg projectName "$PROJECT_NAME" \
            --arg owner "$OWNER" \
            --arg sourceBranch "$SOURCE_BRANCH" \
            --arg targetBranch "$TARGET_BRANCH" \
            --arg llmProvider "$LLM_PROVIDER" \
            --arg llmProviderApiKey "$LLM_PROVIDER_API_KEY" \
            '{
              "repo": ($repo == "null" ? null : $repo),  # 字符串转 null
              "mrNumber": $mrNumber,  # 直接使用 --argjson 接收的 null
              "commitSha": $commitSha,
              "eventType": $eventType,
              "token": $token,
              "mrState": ($mrState == "null" ? null : $mrState),  # 字符串转 null
              "projectId": $projectId,
              "projectName": ($projectName == "null" ? null : $projectName),  # 字符串转 null
              "owner": $owner,
              "sourceBranch": ($sourceBranch == "null" ? null : $sourceBranch),  # 字符串转 null
              "targetBranch": ($targetBranch == "null" ? null : $targetBranch),  # 字符串转 null
              "llmProvider": $llmProvider,
              "llmProviderApiKey": $llmProviderApiKey
            }')

          # 3. 打印验证（确认 null 正确）
          echo "请求体（已脱敏）："
          echo "$REQUEST_BODY" | jq '.token = "***" | .llmProviderApiKey = "***"'

          # 4. 发送请求（同上，略）
          curl -X POST \
            -H "Content-Type: application/json" \
            -H "User-Agent: Ping-AI-Reviewer-Workflow" \
            -d "$REQUEST_BODY" \
            -sS -f \
            "$API_URL" \
            && echo -e "\n✅ API 调用成功！" \
            || (echo -e "\n❌ API 调用失败" && exit 1)